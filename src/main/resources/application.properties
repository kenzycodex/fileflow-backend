# application.properties
# Application information
spring.application.name=FileFlow
server.port=8080

# Active profile
spring.profiles.active=dev

# Database connection
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DATABASE:fileflow}?createDatabaseIfNotExist=true&useSSL=false&serverTimezone=UTC
spring.datasource.username=${MYSQL_USER:fileflow}
spring.datasource.password=${MYSQL_PASSWORD:fileflow}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:true}

# Flyway migration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# JWT Configuration
app.jwt.secret=${JWT_SECRET:v9y$B&E)H@MbQeThWmZq4t7w!z%C*F-JaNdRfUjXn2r5u8x/A?D(G+KbPeShVkYp}
app.jwt.expiration=${JWT_EXPIRATION:86400000}
app.jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}
app.jwt.header=Authorization
app.jwt.prefix=Bearer

# Firebase Configuration
app.firebase.enabled=${FIREBASE_ENABLED:false}
app.firebase.config-file=${FIREBASE_CONFIG_FILE:classpath:firebase-service-account.json}

# File Storage
fileflow.storage.location=${STORAGE_LOCATION:fileflow-storage}
fileflow.storage.max-file-size=${STORAGE_MAX_FILE_SIZE:100MB}
fileflow.storage.chunk-size=${STORAGE_CHUNK_SIZE:5MB}
fileflow.storage.trash-retention-days=${STORAGE_TRASH_RETENTION_DAYS:30}
fileflow.storage.max-versions-per-file=${STORAGE_MAX_VERSIONS:10}
fileflow.storage.chunk-expiry-minutes=${STORAGE_CHUNK_EXPIRY:60}
fileflow.storage.enable-deduplication=${STORAGE_DEDUPLICATION:true}
fileflow.storage.generate-previews=${STORAGE_GENERATE_PREVIEWS:true}
fileflow.storage.generate-thumbnails=${STORAGE_GENERATE_THUMBNAILS:true}

# Storage Strategy (local or minio)
app.storage.strategy=${STORAGE_STRATEGY:local}

# MinIO Configuration
app.minio.endpoint=${MINIO_ENDPOINT:http://localhost:9000}
app.minio.access-key=${MINIO_ACCESS_KEY:minioadmin}
app.minio.secret-key=${MINIO_SECRET_KEY:minioadmin}
app.minio.bucket=${MINIO_BUCKET:fileflow}

# Elasticsearch Configuration
elasticsearch.host=${ELASTICSEARCH_HOST:localhost}
elasticsearch.port=${ELASTICSEARCH_PORT:9200}
elasticsearch.username=${ELASTICSEARCH_USERNAME:elasticadmin}
elasticsearch.password=${ELASTICSEARCH_PASSWORD:elasticadmin}

# Enable Elasticsearch features
spring.data.elasticsearch.repositories.enabled=true

elasticsearch.connection-timeout=${ELASTICSEARCH_CONNECTION_TIMEOUT:5000}
elasticsearch.socket-timeout=${ELASTICSEARCH_SOCKET_TIMEOUT:60000}

elasticsearch.scheme=${ELASTICSEARCH_SCHEME:https}
elasticsearch.ssl.verify=${ELASTICSEARCH_SSL_VERIFY:false}

# Search settings
fileflow.search.max-results=${SEARCH_MAX_RESULTS:1000}
fileflow.search.fuzzy-search=${SEARCH_FUZZY_SEARCH:true}
fileflow.search.highlight-results=${SEARCH_HIGHLIGHT_RESULTS:true}
fileflow.search.auto-index-files=${SEARCH_AUTO_INDEX_FILES:true}

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.display-request-duration=true
springdoc.packagesToScan=com.fileflow.controller
springdoc.pathsToMatch=/api/v1/**

# Disable forwarding view controller recursive loops
spring.mvc.view.prefix=
spring.mvc.view.suffix=
spring.mvc.pathmatch.matching-strategy=ant_path_matcher

# Increase the maximum recursion depth for forward redirects (if needed)
server.tomcat.max-http-form-post-size=2MB
server.max-http-header-size=8KB

# Mail Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:your-email@gmail.com}
spring.mail.password=${MAIL_PASSWORD:your-app-password}
spring.mail.properties.mail.smtp.auth=${MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${MAIL_SMTP_STARTTLS:true}

# Multipart file upload settings
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=${MAX_FILE_UPLOAD_SIZE:100MB}
spring.servlet.multipart.max-request-size=${MAX_REQUEST_SIZE:100MB}

# Internationalization
spring.messages.basename=i18n/messages
spring.messages.encoding=UTF-8

# Actuator
management.endpoints.web.exposure.include=${ACTUATOR_ENDPOINTS:health,info,metrics}
management.endpoint.health.show-details=when_authorized

# Scheduled tasks
app.tasks.trash-cleanup.cron=${TRASH_CLEANUP_CRON:0 0 2 * * ?}
app.tasks.expired-shares.cron=${EXPIRED_SHARES_CRON:0 0 3 * * ?}
app.tasks.quota-check.cron=${QUOTA_CHECK_CRON:0 0 1 * * 0}

# Thumbnail generation
app.thumbnail.enabled=${THUMBNAIL_ENABLED:true}
app.thumbnail.sizes=${THUMBNAIL_SIZES:100,200,400}
app.thumbnail.formats=${THUMBNAIL_FORMATS:jpg,webp}

# Security settings
app.security.password-strength.min-length=${PASSWORD_MIN_LENGTH:8}
app.security.password-strength.require-digits=${PASSWORD_REQUIRE_DIGITS:true}
app.security.password-strength.require-lowercase=${PASSWORD_REQUIRE_LOWERCASE:true}
app.security.password-strength.require-uppercase=${PASSWORD_REQUIRE_UPPERCASE:true}
app.security.password-strength.require-special=${PASSWORD_REQUIRE_SPECIAL:true}

# Logging configuration
logging.level.root=${LOG_LEVEL_ROOT:INFO}
logging.level.org.springframework.web=${LOG_LEVEL_SPRING_WEB:INFO}
logging.level.org.springframework.security=${LOG_LEVEL_SPRING_SECURITY:INFO}
logging.level.com.fileflow=${LOG_LEVEL_FILEFLOW:INFO}
logging.file.name=${LOG_FILE_NAME:logs/fileflow.log}
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n