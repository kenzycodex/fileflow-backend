version: '3.8'

services:
  app:
    build: .
    container_name: fileflow-app
    ports:
      - "${SERVER_PORT:-8080}:8080"
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}
      # Mail configuration (use real SMTP in production)
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_SMTP_AUTH=${MAIL_SMTP_AUTH}
      - MAIL_SMTP_STARTTLS=${MAIL_SMTP_STARTTLS}
      - MAIL_FROM=${MAIL_FROM}
    volumes:
      - ./config:/app/config
      - ./.env:/app/.env
      - fileflow-storage:/data/fileflow-storage
      - fileflow-logs:/app/logs
    networks:
      - fileflow-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:8.0
    container_name: fileflow-mysql
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - fileflow-network
    restart: unless-stopped
    command:
      - --default-authentication-plugin=caching_sha2_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3

  minio:
    image: minio/minio:latest
    container_name: fileflow-minio
    ports:
      - "${MINIO_API_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - fileflow-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    container_name: fileflow-elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=${ELASTIC_SECURITY_ENABLED:-false}
      - ELASTIC_USERNAME=${ELASTICSEARCH_USERNAME}
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ports:
      - "${ELASTICSEARCH_PORT:-9200}:9200"
      - "${ELASTICSEARCH_TRANSPORT_PORT:-9300}:9300"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - fileflow-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -e '\"status\":\"green\"' -e '\"status\":\"yellow\"'" ]
      interval: 30s
      timeout: 10s
      retries: 3
    ulimits:
      memlock:
        soft: -1
        hard: -1

  redis:
    image: redis:7.0-alpine
    container_name: fileflow-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    networks:
      - fileflow-network
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Include MailHog for production troubleshooting
  # Note: For actual production, use a real SMTP server
  # Uncomment this section only if you need it for troubleshooting
  # mailhog:
  #   image: mailhog/mailhog:latest
  #   container_name: fileflow-mailhog
  #   ports:
  #     - "1025:1025" # SMTP server
  #     - "8025:8025" # Web UI
  #   networks:
  #     - fileflow-network
  #   restart: unless-stopped
  #   # Secured behind internal network, not exposed to public

networks:
  fileflow-network:
    driver: bridge

volumes:
  mysql-data:
  minio-data:
  elasticsearch-data:
  redis-data:
  fileflow-storage:
  fileflow-logs: